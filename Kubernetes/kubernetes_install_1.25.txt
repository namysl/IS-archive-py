student@master:~$ wget https://packages.cloud.google.com/apt/pool/kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb
--2022-12-29 21:48:46--  https://packages.cloud.google.com/apt/pool/kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb
Resolving packages.cloud.google.com (packages.cloud.google.com)... 216.58.208.206, 2a00:1450:401b:800::200e
Connecting to packages.cloud.google.com (packages.cloud.google.com)|216.58.208.206|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 9228648 (8.8M) [application/x-debian-package]
Saving to: ‘kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb’

kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df 100%[=====================================================================================================>]   8.80M  28.7MB/s    in 0.3s    

2022-12-29 21:48:46 (28.7 MB/s) - ‘kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb’ saved [9228648/9228648]

student@master:~$ wget https://packages.cloud.google.com/apt/pool/kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb
--2022-12-29 21:51:40--  https://packages.cloud.google.com/apt/pool/kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb
Resolving packages.cloud.google.com (packages.cloud.google.com)... 216.58.208.206, 2a00:1450:401b:800::200e
Connecting to packages.cloud.google.com (packages.cloud.google.com)|216.58.208.206|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 9508960 (9.1M) [application/x-debian-package]
Saving to: ‘kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb’

kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94 100%[=====================================================================================================>]   9.07M  29.7MB/s    in 0.3s    

2022-12-29 21:51:40 (29.7 MB/s) - ‘kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb’ saved [9508960/9508960]

student@master:~$ wget https://packages.cloud.google.com/apt/pool/kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb
--2022-12-29 21:53:33--  https://packages.cloud.google.com/apt/pool/kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb
Resolving packages.cloud.google.com (packages.cloud.google.com)... 216.58.208.206, 2a00:1450:401b:800::200e
Connecting to packages.cloud.google.com (packages.cloud.google.com)|216.58.208.206|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 19473628 (19M) [application/x-debian-package]
Saving to: ‘kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb’

kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9 100%[=====================================================================================================>]  18.57M  17.7MB/s    in 1.1s    

2022-12-29 21:53:34 (17.7 MB/s) - ‘kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb’ saved [19473628/19473628]


student@master:~$ ls
kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb  kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb
kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb


student@master:~$ sudo dpkg -i kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb 
Selecting previously unselected package kubelet.
(Reading database ... 73559 files and directories currently installed.)
Preparing to unpack kubelet_1.25.5-00_amd64_ac93861aaf53c27ca9006a9ad6b5f33aec4c290286127f7a77d14abc6d43c409.deb ...
Unpacking kubelet (1.25.5-00) ...
Setting up kubelet (1.25.5-00) ...

student@master:~$ sudo dpkg -i kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb 
Selecting previously unselected package kubectl.
(Reading database ... 73558 files and directories currently installed.)
Preparing to unpack kubectl_1.25.5-00_amd64_08cd418b9788216d06d3a94e3a84a273487caf04cc60f689aad58cb1d7b50c3a.deb ...
Unpacking kubectl (1.25.5-00) ...
Setting up kubectl (1.25.5-00) ...


student@master:~$ sudo dpkg -i kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb 
Selecting previously unselected package kubeadm.
(Reading database ... 73561 files and directories currently installed.)
Preparing to unpack kubeadm_1.25.5-00_amd64_2788155857bba8c7d3529df26085e4a174faec14171d2361dd49fe1e272198fc.deb ...
Unpacking kubeadm (1.25.5-00) ...
Setting up kubeadm (1.25.5-00) ...
student@master:~$ sudo kubeadm init
I1229 21:54:37.091567   16025 version.go:256] remote version is much newer: v1.26.0; falling back to: stable-1.25
[init] Using Kubernetes version: v1.25.5
[preflight] Running pre-flight checks
	[WARNING SystemVerification]: missing optional cgroups: blkio
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
[certs] Using certificateDir folder "/etc/kubernetes/pki"
[certs] Generating "ca" certificate and key
[certs] Generating "apiserver" certificate and key
[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local master] and IPs [10.96.0.1 10.10.1.10]
[certs] Generating "apiserver-kubelet-client" certificate and key
[certs] Generating "front-proxy-ca" certificate and key
[certs] Generating "front-proxy-client" certificate and key
[certs] Generating "etcd/ca" certificate and key
[certs] Generating "etcd/server" certificate and key
[certs] etcd/server serving cert is signed for DNS names [localhost master] and IPs [10.10.1.10 127.0.0.1 ::1]
[certs] Generating "etcd/peer" certificate and key
[certs] etcd/peer serving cert is signed for DNS names [localhost master] and IPs [10.10.1.10 127.0.0.1 ::1]
[certs] Generating "etcd/healthcheck-client" certificate and key
[certs] Generating "apiserver-etcd-client" certificate and key
[certs] Generating "sa" key and public key
[kubeconfig] Using kubeconfig folder "/etc/kubernetes"
[kubeconfig] Writing "admin.conf" kubeconfig file
[kubeconfig] Writing "kubelet.conf" kubeconfig file
[kubeconfig] Writing "controller-manager.conf" kubeconfig file
[kubeconfig] Writing "scheduler.conf" kubeconfig file
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Starting the kubelet
[control-plane] Using manifest folder "/etc/kubernetes/manifests"
[control-plane] Creating static Pod manifest for "kube-apiserver"
[control-plane] Creating static Pod manifest for "kube-controller-manager"
[control-plane] Creating static Pod manifest for "kube-scheduler"
[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
[apiclient] All control plane components are healthy after 16.505127 seconds
[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
[kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Skipping phase. Please see --upload-certs
[mark-control-plane] Marking the node master as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node master as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: v5sje0.8kriu9yur87wtelw
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 10.10.1.10:6443 --token v5sje0.8kriu9yur87wtelw \
	--discovery-token-ca-cert-hash sha256:1d6583a3c77da6f3d2820d12514ef5cbe1144ac3ae050d13cb07f9a42d312aaa 


student@master:~$ sudo reboot
Connection to master closed by remote host.
Connection to master closed.
[root@base ~]# ssh student@master

student@master:~$ kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
serviceaccount/weave-net created
clusterrole.rbac.authorization.k8s.io/weave-net created
clusterrolebinding.rbac.authorization.k8s.io/weave-net created
role.rbac.authorization.k8s.io/weave-net created
rolebinding.rbac.authorization.k8s.io/weave-net created
daemonset.apps/weave-net created


sudo apt install socat kubernetes-cni ebtables conntrack


student@node1:~$ sudo apt install cri-tools
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  cri-tools
0 upgraded, 1 newly installed, 0 to remove and 122 not upgraded.
1 not fully installed or removed.
Need to get 17.9 MB of archives.
After this operation, 50.3 MB of additional disk space will be used.
Get:1 https://packages.cloud.google.com/apt kubernetes-xenial/main amd64 cri-tools amd64 1.25.0-00 [17.9 MB]
Fetched 17.9 MB in 1s (13.8 MB/s)    
Selecting previously unselected package cri-tools.
(Reading database ... 73767 files and directories currently installed.)
Preparing to unpack .../cri-tools_1.25.0-00_amd64.deb ...
Unpacking cri-tools (1.25.0-00) ...
Setting up cri-tools (1.25.0-00) ...
Setting up kubeadm (1.25.5-00) ...
needrestart is being skipped since dpkg has failed

pozniej install kubelet kubectl  kubeadm








